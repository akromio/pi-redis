spec: v1.0
desc: Internal catalog.

dataset:
  - const: redis
    value:
      image: redis:alpine
      container: redis
      port: 6379
  
  - const: src
    desc: Dir with the source code.
    value: ./src

  - const: dist
    desc: Output dir.
    value: ./dist
  
  - const: testSrc
    desc: Dir with the non-unit tests.
    value: ./tests
  
  - const: testDist
    desc: Non-unit test output dir.
    value: ./__tests__

defaultJobName: build
jobs:
  - macro: build
    title: Build the plugin
    steps:
      - lint
      - fs.remove $(dist)
      - fs.remove $(testDist)
      - compile
      - tests/unit
  
  - group: src
    jobs:
      - macro: lint
        title: Analyze code statically
        steps:
          - exec.log dogmac check $(src) $(testSrc)

      - macro: compile
        title: Compile code
        steps:
          - exec.log dogmac js -o $(dist)/cjs $(src)
          - exec.log npm run env -- babel -d $(dist) $(dist)
          - exec.log dogmac js -o $(testDist) $(testSrc)
          - exec.log npm run env -- babel -d $(testDist) $(testDist)

  - group: test
    jobs:
      - macro: tests
        title: Run the tests locally
        steps:
          - tests/unit
          - tests/itg

      - macro: tests/unit
        title: Run the unit tests
        steps:
          - exec.log npm run env -- mocha --config .mocharc.yaml
      
      - macro: tests/itg
        title: Run the integration tests
        ini: redis/start
        fin: redis/stop
        steps:
          - ci/itg
      
      - macro: ci/itg
        title: Run the integration tests (CI platform)
        steps:
          - exec.log npm run env -- mocha --config .mocharc.itg.yaml
      
      - macro: cov
        title: Code coverage
        steps:
          - exec.log npm run env -- c8 mocha --config .mocharc.yaml
      
  - group: docker
    jobs:
      - macro: redis/start
        title: Start Redis instance
        steps:
          - sudo: docker run --name $(redis.container) --rm -d -p $(redis.port):6379 $(redis.image)
          - step: sleep 1s
          - run: redis-cli ping

      - macro: redis/stop
        title: Stop redis instance
        steps:
          - sudo: docker stop $(redis.container)
