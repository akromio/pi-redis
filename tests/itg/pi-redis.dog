use (
  alias://expected
  {createClient} = dep://redis
  pi = ~
)

suite(__filename, proc()
  var (
    {ini, fin} ::= pi
    state, redis
  )

  setup(async proc()
    {redis} = state = await(ini(host = "localhost", port = 6379))
  end)

  teardown(async proc()
    await(fin(state))
  end)

  suite("PING", proc()
    const {ping} = pi.ops

    test("perform ping for getting pong", async proc()
      # (1) act
      const out = await(ping.fun(state=, params = {}))

      # (2) assessment
      expected(out).equalTo("PONG")
    end)
  end)

  suite("XCREATE GROUP", proc()
    const (
      xcreate = pi.ops["xgroup.create"]
      stream = "my-stream"
      group = "my-group"
    )

    test("create a consumer group", async proc()
      # (1) act
      const out = await(xcreate.fun(state=, params = {stream, group}))

      # (2) assessment
      expected(out).equalTo("OK")

      const groups = await(redis.sendCommand(["XINFO", "GROUPS", stream]))
      expected(groups[0]).second.equalTo(group)
    end)
  end)
end)
